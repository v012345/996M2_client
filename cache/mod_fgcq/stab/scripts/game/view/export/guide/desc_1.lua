--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorOpacity(102)
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(41)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
Panel_1:setAnchorPoint(1.0000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setSize({width = 186.0000, height = 59.0000})
layout:setLeftMargin(-186.0000)
layout:setTopMargin(-29.5000)
layout:setBottomMargin(-29.5000)
Node:addChild(Panel_1)

--Create Image_arrow
local Image_arrow = ccui.ImageView:create()
Image_arrow:ignoreContentAdaptWithSize(false)
Image_arrow:loadTexture("res/private/guide/arrow_guide_1.png",0)
Image_arrow:setLayoutComponentEnabled(true)
Image_arrow:setName("Image_arrow")
Image_arrow:setTag(25)
Image_arrow:setCascadeColorEnabled(true)
Image_arrow:setCascadeOpacityEnabled(true)
Image_arrow:setPosition(169.6199, 29.1549)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_arrow)
layout:setPositionPercentX(0.9119)
layout:setPositionPercentY(0.4942)
layout:setPercentWidth(0.1774)
layout:setPercentHeight(0.4915)
layout:setSize({width = 33.0000, height = 29.0000})
layout:setLeftMargin(153.1199)
layout:setRightMargin(-0.1199)
layout:setTopMargin(15.3452)
layout:setBottomMargin(14.6549)
Panel_1:addChild(Image_arrow)

--Create Image_desc
local Image_desc = ccui.ImageView:create()
Image_desc:ignoreContentAdaptWithSize(false)
Image_desc:loadTexture("res/private/guide/btn_guide_1.png",0)
Image_desc:setLayoutComponentEnabled(true)
Image_desc:setName("Image_desc")
Image_desc:setTag(26)
Image_desc:setCascadeColorEnabled(true)
Image_desc:setCascadeOpacityEnabled(true)
Image_desc:setPosition(77.9005, 29.1555)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_desc)
layout:setPositionPercentX(0.4188)
layout:setPositionPercentY(0.4942)
layout:setPercentWidth(0.8978)
layout:setPercentHeight(1.1186)
layout:setSize({width = 167.0000, height = 66.0000})
layout:setLeftMargin(-5.5995)
layout:setRightMargin(24.5995)
layout:setTopMargin(-3.1554)
layout:setBottomMargin(-3.8446)
Panel_1:addChild(Image_desc)

--Create Node_desc
local Node_desc=cc.Node:create()
Node_desc:setName("Node_desc")
Node_desc:setTag(36)
Node_desc:setCascadeColorEnabled(true)
Node_desc:setCascadeOpacityEnabled(true)
Node_desc:setPosition(77.9002, 29.1549)
layout = ccui.LayoutComponent:bindLayoutComponent(Node_desc)
layout:setPositionPercentX(0.4188)
layout:setPositionPercentY(0.4942)
layout:setLeftMargin(77.9002)
layout:setRightMargin(108.0998)
layout:setTopMargin(29.8451)
layout:setBottomMargin(29.1549)
Panel_1:addChild(Node_desc)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

