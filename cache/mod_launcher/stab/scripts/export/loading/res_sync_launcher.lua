--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorOpacity(102)
Panel_1:setTouchEnabled(true);
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(2)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1136.0000, height = 640.0000})
layout:setStretchWidthEnabled(true)
layout:setStretchHeightEnabled(true)
Scene:addChild(Panel_1)

--Create Image_1
local Image_1 = ccui.ImageView:create()
Image_1:ignoreContentAdaptWithSize(false)
Image_1:loadTexture("res/private/loading/bg_loading_01.jpg",0)
Image_1:setLayoutComponentEnabled(true)
Image_1:setName("Image_1")
Image_1:setTag(4)
Image_1:setCascadeColorEnabled(true)
Image_1:setCascadeOpacityEnabled(true)
Image_1:setPosition(568.0000, 320.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.2236)
layout:setPercentHeight(1.3438)
layout:setSize({width = 1390.0000, height = 860.0000})
layout:setLeftMargin(-127.0000)
layout:setRightMargin(-127.0000)
layout:setTopMargin(-110.0000)
layout:setBottomMargin(-110.0000)
Scene:addChild(Image_1)

--Create Image_bar
local Image_bar = ccui.ImageView:create()
Image_bar:ignoreContentAdaptWithSize(false)
Image_bar:loadTexture("res/private/loading/bg_loading_02.png",0)
Image_bar:setLayoutComponentEnabled(true)
Image_bar:setName("Image_bar")
Image_bar:setTag(24)
Image_bar:setCascadeColorEnabled(true)
Image_bar:setCascadeOpacityEnabled(true)
Image_bar:setPosition(568.0000, 49.9840)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_bar)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.0781)
layout:setPercentWidth(0.8257)
layout:setPercentHeight(0.0484)
layout:setSize({width = 938.0000, height = 31.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(99.0000)
layout:setRightMargin(99.0000)
layout:setTopMargin(574.5160)
layout:setBottomMargin(34.4840)
Scene:addChild(Image_bar)

--Create LoadingBar_percent
local LoadingBar_percent = ccui.LoadingBar:create()
LoadingBar_percent:loadTexture("res/private/loading/bg_loading_03.png",0)
LoadingBar_percent:ignoreContentAdaptWithSize(false)
LoadingBar_percent:setPercent(0)
LoadingBar_percent:setLayoutComponentEnabled(true)
LoadingBar_percent:setName("LoadingBar_percent")
LoadingBar_percent:setTag(3)
LoadingBar_percent:setCascadeColorEnabled(true)
LoadingBar_percent:setCascadeOpacityEnabled(true)
LoadingBar_percent:setPosition(568.0000, 49.9840)
layout = ccui.LayoutComponent:bindLayoutComponent(LoadingBar_percent)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.0781)
layout:setPercentWidth(0.8107)
layout:setPercentHeight(0.0297)
layout:setSize({width = 921.0000, height = 19.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(107.5000)
layout:setRightMargin(107.5000)
layout:setTopMargin(580.5160)
layout:setBottomMargin(40.4840)
Scene:addChild(LoadingBar_percent)

--Create Text_percent
local Text_percent = ccui.Text:create()
Text_percent:ignoreContentAdaptWithSize(true)
Text_percent:setTextAreaSize({width = 0, height = 0})
Text_percent:setFontName("fonts/font.ttf")
Text_percent:setFontSize(17)
Text_percent:setString([[0/100 获取版本信息...]])
Text_percent:enableOutline({r = 0, g = 0, b = 0, a = 255}, 1)
Text_percent:setLayoutComponentEnabled(true)
Text_percent:setName("Text_percent")
Text_percent:setTag(8)
Text_percent:setCascadeColorEnabled(true)
Text_percent:setCascadeOpacityEnabled(true)
Text_percent:setPosition(568.0000, 100.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_percent)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.1563)
layout:setPercentWidth(0.1461)
layout:setPercentHeight(0.0375)
layout:setSize({width = 166.0000, height = 24.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(1)
layout:setLeftMargin(485.0000)
layout:setRightMargin(485.0000)
layout:setTopMargin(528.0000)
layout:setBottomMargin(88.0000)
Scene:addChild(Text_percent)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

