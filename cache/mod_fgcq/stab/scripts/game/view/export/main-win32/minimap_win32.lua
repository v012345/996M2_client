--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Panel_minimap
local Panel_minimap = ccui.Layout:create()
Panel_minimap:ignoreContentAdaptWithSize(false)
Panel_minimap:setClippingEnabled(true)
Panel_minimap:setBackGroundColorOpacity(102)
Panel_minimap:setTouchEnabled(true);
Panel_minimap:setLayoutComponentEnabled(true)
Panel_minimap:setName("Panel_minimap")
Panel_minimap:setTag(22)
Panel_minimap:setCascadeColorEnabled(true)
Panel_minimap:setCascadeOpacityEnabled(true)
Panel_minimap:setAnchorPoint(1.0000, 1.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_minimap)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 112.0000, height = 111.0000})
layout:setLeftMargin(-112.0000)
layout:setBottomMargin(-111.0000)
Node:addChild(Panel_minimap)

--Create Image_minimap
local Image_minimap = ccui.ImageView:create()
Image_minimap:ignoreContentAdaptWithSize(false)
Image_minimap:loadTexture("Default/ImageFile.png",0)
Image_minimap:setLayoutComponentEnabled(true)
Image_minimap:setName("Image_minimap")
Image_minimap:setTag(46)
Image_minimap:setCascadeColorEnabled(true)
Image_minimap:setCascadeOpacityEnabled(true)
Image_minimap:setAnchorPoint(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_minimap)
layout:setPercentWidth(0.4107)
layout:setPercentHeight(0.4144)
layout:setSize({width = 46.0000, height = 46.0000})
layout:setRightMargin(66.0000)
layout:setTopMargin(65.0000)
Panel_minimap:addChild(Image_minimap)

--Create Node_actors
local Node_actors=cc.Node:create()
Node_actors:setName("Node_actors")
Node_actors:setTag(63)
Node_actors:setCascadeColorEnabled(true)
Node_actors:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Node_actors)
layout:setRightMargin(46.0000)
layout:setTopMargin(46.0000)
Image_minimap:addChild(Node_actors)

--Create Node_player
local Node_player=cc.Node:create()
Node_player:setName("Node_player")
Node_player:setTag(23)
Node_player:setCascadeColorEnabled(true)
Node_player:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Node_player)
layout:setRightMargin(112.0000)
layout:setTopMargin(111.0000)
Panel_minimap:addChild(Node_player)

--Create Text_mouse_pos
local Text_mouse_pos = ccui.Text:create()
Text_mouse_pos:ignoreContentAdaptWithSize(true)
Text_mouse_pos:setTextAreaSize({width = 0, height = 0})
Text_mouse_pos:setFontName("fonts/font2.ttf")
Text_mouse_pos:setFontSize(12)
Text_mouse_pos:setString([[99.99]])
Text_mouse_pos:setLayoutComponentEnabled(true)
Text_mouse_pos:setName("Text_mouse_pos")
Text_mouse_pos:setTag(60)
Text_mouse_pos:setCascadeColorEnabled(true)
Text_mouse_pos:setCascadeOpacityEnabled(true)
Text_mouse_pos:setAnchorPoint(1.0000, 0.0000)
Text_mouse_pos:setPosition(112.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_mouse_pos)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(1.0000)
layout:setPercentWidth(0.3036)
layout:setPercentHeight(0.1441)
layout:setSize({width = 34.0000, height = 16.0000})
layout:setLeftMargin(78.0000)
layout:setTopMargin(95.0000)
Panel_minimap:addChild(Text_mouse_pos)

--Create Image_mapFlag
local Image_mapFlag = ccui.ImageView:create()
Image_mapFlag:ignoreContentAdaptWithSize(false)
Image_mapFlag:loadTexture("res/private/main-win32/00150.png",0)
Image_mapFlag:setLayoutComponentEnabled(true)
Image_mapFlag:setName("Image_mapFlag")
Image_mapFlag:setTag(65)
Image_mapFlag:setCascadeColorEnabled(true)
Image_mapFlag:setCascadeOpacityEnabled(true)
Image_mapFlag:setAnchorPoint(1.0000, 1.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_mapFlag)
layout:setSize({width = 28.0000, height = 17.0000})
layout:setLeftMargin(-28.0000)
layout:setBottomMargin(-17.0000)
Node:addChild(Image_mapFlag)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

