--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create NODE_ROOT
local NODE_ROOT=cc.Node:create()
NODE_ROOT:setName("NODE_ROOT")

--Create NODE_GAME_WORLD
local NODE_GAME_WORLD=cc.Node:create()
NODE_GAME_WORLD:setName("NODE_GAME_WORLD")
NODE_GAME_WORLD:setTag(10023)
NODE_GAME_WORLD:setCascadeColorEnabled(true)
NODE_GAME_WORLD:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_GAME_WORLD)
layout:setRightMargin(960.0000)
layout:setTopMargin(640.0000)
NODE_ROOT:addChild(NODE_GAME_WORLD)

--Create NODE_MAP
local NODE_MAP=cc.Node:create()
NODE_MAP:setName("NODE_MAP")
NODE_MAP:setTag(10003)
NODE_MAP:setCascadeColorEnabled(true)
NODE_MAP:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_MAP)
NODE_GAME_WORLD:addChild(NODE_MAP)

--Create NODE_MAP_SLICE
local NODE_MAP_SLICE=cc.Node:create()
NODE_MAP_SLICE:setName("NODE_MAP_SLICE")
NODE_MAP_SLICE:setTag(10006)
NODE_MAP_SLICE:setCascadeColorEnabled(true)
NODE_MAP_SLICE:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_MAP_SLICE)
NODE_MAP:addChild(NODE_MAP_SLICE)

--Create NODE_SKILL_BEHIND
local NODE_SKILL_BEHIND=cc.Node:create()
NODE_SKILL_BEHIND:setName("NODE_SKILL_BEHIND")
NODE_SKILL_BEHIND:setTag(10034)
NODE_SKILL_BEHIND:setCascadeColorEnabled(true)
NODE_SKILL_BEHIND:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_SKILL_BEHIND)
NODE_GAME_WORLD:addChild(NODE_SKILL_BEHIND)

--Create NODE_ACTOR
local NODE_ACTOR=cc.Node:create()
NODE_ACTOR:setName("NODE_ACTOR")
NODE_ACTOR:setTag(10004)
NODE_ACTOR:setCascadeColorEnabled(true)
NODE_ACTOR:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR)
NODE_GAME_WORLD:addChild(NODE_ACTOR)

--Create NODE_ACTOR_SHADOW
local NODE_ACTOR_SHADOW=cc.Node:create()
NODE_ACTOR_SHADOW:setName("NODE_ACTOR_SHADOW")
NODE_ACTOR_SHADOW:setTag(10007)
NODE_ACTOR_SHADOW:setCascadeColorEnabled(true)
NODE_ACTOR_SHADOW:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_SHADOW)
NODE_ACTOR:addChild(NODE_ACTOR_SHADOW)

--Create NODE_ACTOR_CLONE_SHADOW
local NODE_ACTOR_CLONE_SHADOW=cc.Node:create()
NODE_ACTOR_CLONE_SHADOW:setName("NODE_ACTOR_CLONE_SHADOW")
NODE_ACTOR_CLONE_SHADOW:setTag(10030)
NODE_ACTOR_CLONE_SHADOW:setCascadeColorEnabled(true)
NODE_ACTOR_CLONE_SHADOW:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_CLONE_SHADOW)
NODE_ACTOR:addChild(NODE_ACTOR_CLONE_SHADOW)

--Create NODE_ACTOR_NPC_SHADOW
local NODE_ACTOR_NPC_SHADOW=cc.Node:create()
NODE_ACTOR_NPC_SHADOW:setName("NODE_ACTOR_NPC_SHADOW")
NODE_ACTOR_NPC_SHADOW:setTag(10031)
NODE_ACTOR_NPC_SHADOW:setCascadeColorEnabled(true)
NODE_ACTOR_NPC_SHADOW:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_NPC_SHADOW)
NODE_ACTOR_CLONE_SHADOW:addChild(NODE_ACTOR_NPC_SHADOW)

--Create NODE_ACTOR_MONSTER_SHADOW
local NODE_ACTOR_MONSTER_SHADOW=cc.Node:create()
NODE_ACTOR_MONSTER_SHADOW:setName("NODE_ACTOR_MONSTER_SHADOW")
NODE_ACTOR_MONSTER_SHADOW:setTag(10032)
NODE_ACTOR_MONSTER_SHADOW:setCascadeColorEnabled(true)
NODE_ACTOR_MONSTER_SHADOW:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_MONSTER_SHADOW)
NODE_ACTOR_CLONE_SHADOW:addChild(NODE_ACTOR_MONSTER_SHADOW)

--Create NODE_ACTOR_PLAYER_SHADOW
local NODE_ACTOR_PLAYER_SHADOW=cc.Node:create()
NODE_ACTOR_PLAYER_SHADOW:setName("NODE_ACTOR_PLAYER_SHADOW")
NODE_ACTOR_PLAYER_SHADOW:setTag(10033)
NODE_ACTOR_PLAYER_SHADOW:setCascadeColorEnabled(true)
NODE_ACTOR_PLAYER_SHADOW:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_PLAYER_SHADOW)
NODE_ACTOR_CLONE_SHADOW:addChild(NODE_ACTOR_PLAYER_SHADOW)

--Create NODE_ACTOR_SFX_BEHIND
local NODE_ACTOR_SFX_BEHIND=cc.Node:create()
NODE_ACTOR_SFX_BEHIND:setName("NODE_ACTOR_SFX_BEHIND")
NODE_ACTOR_SFX_BEHIND:setTag(10016)
NODE_ACTOR_SFX_BEHIND:setCascadeColorEnabled(true)
NODE_ACTOR_SFX_BEHIND:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_SFX_BEHIND)
NODE_ACTOR:addChild(NODE_ACTOR_SFX_BEHIND)

--Create NODE_ACTOR_SPRITE
local NODE_ACTOR_SPRITE=cc.Node:create()
NODE_ACTOR_SPRITE:setName("NODE_ACTOR_SPRITE")
NODE_ACTOR_SPRITE:setTag(10008)
NODE_ACTOR_SPRITE:setCascadeColorEnabled(true)
NODE_ACTOR_SPRITE:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_SPRITE)
NODE_ACTOR:addChild(NODE_ACTOR_SPRITE)

--Create NODE_ACTOR_SFX_FRONT
local NODE_ACTOR_SFX_FRONT=cc.Node:create()
NODE_ACTOR_SFX_FRONT:setName("NODE_ACTOR_SFX_FRONT")
NODE_ACTOR_SFX_FRONT:setTag(10010)
NODE_ACTOR_SFX_FRONT:setCascadeColorEnabled(true)
NODE_ACTOR_SFX_FRONT:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_SFX_FRONT)
NODE_ACTOR:addChild(NODE_ACTOR_SFX_FRONT)

--Create NODE_MAP_OBJ
local NODE_MAP_OBJ=cc.Node:create()
NODE_MAP_OBJ:setName("NODE_MAP_OBJ")
NODE_MAP_OBJ:setTag(10035)
NODE_MAP_OBJ:setCascadeColorEnabled(true)
NODE_MAP_OBJ:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_MAP_OBJ)
NODE_GAME_WORLD:addChild(NODE_MAP_OBJ)

--Create NODE_SKILL
local NODE_SKILL=cc.Node:create()
NODE_SKILL:setName("NODE_SKILL")
NODE_SKILL:setTag(10015)
NODE_SKILL:setCascadeColorEnabled(true)
NODE_SKILL:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_SKILL)
NODE_GAME_WORLD:addChild(NODE_SKILL)

--Create NODE_ACTOR_HUD
local NODE_ACTOR_HUD=cc.Node:create()
NODE_ACTOR_HUD:setName("NODE_ACTOR_HUD")
NODE_ACTOR_HUD:setTag(10009)
NODE_ACTOR_HUD:setCascadeColorEnabled(true)
NODE_ACTOR_HUD:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_ACTOR_HUD)
NODE_GAME_WORLD:addChild(NODE_ACTOR_HUD)

--Create NODE_DAMAGE
local NODE_DAMAGE=cc.Node:create()
NODE_DAMAGE:setName("NODE_DAMAGE")
NODE_DAMAGE:setTag(10017)
NODE_DAMAGE:setCascadeColorEnabled(true)
NODE_DAMAGE:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_DAMAGE)
NODE_GAME_WORLD:addChild(NODE_DAMAGE)

--Create NODE_UI
local NODE_UI=cc.Node:create()
NODE_UI:setName("NODE_UI")
NODE_UI:setTag(10005)
NODE_UI:setCascadeColorEnabled(true)
NODE_UI:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_UI)
layout:setRightMargin(960.0000)
layout:setTopMargin(640.0000)
NODE_ROOT:addChild(NODE_UI)

--Create NODE_UI_NORMAL
local NODE_UI_NORMAL=cc.Node:create()
NODE_UI_NORMAL:setName("NODE_UI_NORMAL")
NODE_UI_NORMAL:setTag(10011)
NODE_UI_NORMAL:setCascadeColorEnabled(true)
NODE_UI_NORMAL:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_UI_NORMAL)
NODE_UI:addChild(NODE_UI_NORMAL)

--Create NODE_UI_TOPMOST
local NODE_UI_TOPMOST=cc.Node:create()
NODE_UI_TOPMOST:setName("NODE_UI_TOPMOST")
NODE_UI_TOPMOST:setTag(10012)
NODE_UI_TOPMOST:setCascadeColorEnabled(true)
NODE_UI_TOPMOST:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(NODE_UI_TOPMOST)
NODE_UI:addChild(NODE_UI_TOPMOST)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = NODE_ROOT
return result;
end

return Result

